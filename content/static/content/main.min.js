/////Обновления корзины в шапке сайта/////
function readyFn( jQuery ) {
  let form = $('.basket_item')
  let data = {}
  let csrf_token = $('.basket [name="csrfmiddlewaretoken"]').val()
  data["csrfmiddlewaretoken"] = csrf_token
  //console.log(csrf_token, '++')
  $.ajax({
    url: 'http://192.168.0.107:8000/shop/basket',
    // url: 'http://127.0.0.1:8000/shop/basket' вроде такой локальный,
    type: 'POST',
    data: data,
    cache: true,
    success: function (data) {
        console.log("OK1");
        form.html('<p>' + data.sum + '</p>')
        form.height(30)
        form.width(30)
    },
    error: function(){
        //console.log(url)
        console.log("error")
    }
})
}


//////Количество товара + их цена(вывод в html корзины)///////////////

function basketFn1(slug, data, price) {
  $(`.${slug}_${price} .money`).html(`${data*price} ₴`)
  $(`.${slug}_${price} .quantity`).html(`${data}`)
  
  }

//////Общая цена товара пользователя(вывод в html корзины)///////////////

function sumBasketFn2() {

let eachProduct = $(".you_basket");
  let sum = 0
  eachProduct.each(function(index, element){
    //let slug = $(this).find('.same-info').val()
    let price = $(this).find('.main_price').val()
    let nmb = $(this).find('.quantity').text().split(/\s+/g)
    for (i in  nmb){
      if (nmb[i] != ''){
        nmbN = nmb[i]
      }
    }
    sum +=  Number(price)*Number(nmbN)
  })
  console.log(sum)
  $(`.checkout`).find('.sum').html(sum + '₴')

}






/////добавления товара + вызов Доп ф-й/////
$(function(){
  let form = $('.form-prod')
  //console.log(form)
  readyFn()
  sumBasketFn2()
  form.on('submit', function(e){
    e.preventDefault()
    if ($(this).click()){
      let slug = $(this).find('.same-info').val()
      let price = $(this).find('.main_price').val()
      let volume = $(this).find('.main_volume').val()
      console.log(volume, 'R')
      let data = {}
      data.slug = slug
      data.price = price
      data.volume = volume
      let csrf_token = $('.form-prod [name="csrfmiddlewaretoken"]').val()
      
      data["csrfmiddlewaretoken"] = csrf_token

      $.ajax({
        url: 'http://192.168.0.107:8000/shop/basket_adding',
        type: 'POST',
        data: data,
        cache: true,
        success: function (data) {
          console.log("OK");
          console.log(data.quantity_new)
          readyFn()
          basketFn1(slug, data.quantity_new, data.price)
          sumBasketFn2()
        },
        error: function(){
            //console.log(url)
            console.log("error")
        }
    })
    }
  })
})



/////Обработка отнимания товара + вызов доп ф-й/////
$(function(){
  let form = $('.form-prod-minus')
  //console.log(form)
  form.on('submit', function(e){
    e.preventDefault()
    if ($(this).click()){
      let slug = $(this).find('.same-info').val()
      let price = $(this).find('.main_price').val()
      let volume = $(this).find('.main_volume').val()
      let data = {}
      data.slug = slug
      data.price = price
      data.volume = volume
      let csrf_token = $('.form-prod [name="csrfmiddlewaretoken"]').val()
      data["csrfmiddlewaretoken"] = csrf_token
     // console.log(data)

      $.ajax({
        url: 'http://192.168.0.107:8000/shop/basket_minus',
        type: 'POST',
        data: data,
        cache: true,
        success: function (data) {
            if (data.key == 1){
              console.log("OK");
              console.log(data.quantity_new)
              basketFn1(slug, data.quantity_new, data.price)
              readyFn() 
              sumBasketFn2()
            }else{
              console.log("OK");
              location.reload();  
              readyFn()
              sumBasketFn2()
              
            }


        },
        error: function(){
            //console.log(url)
            console.log("error")
        }
    })
    }
  })
})







//Переключатель Обьема + цены в магазине(гланая, категории)///

$(document).ready(function() {

  $(".btn_volume_1").click(function() {
    slug ='.' +  $(this).find('.slug').val()
    volume = $(this).find('.btn_volume1').val()
    console.log(volume)
    price1 = $(this).find('.btn_prise1').val()
    $(this).attr('disabled', true);
    $(`${slug} .btn_volume_2`).attr('disabled', false)
    $(`${slug} .btn_prise .price`).html(`${price1} грн.`)
    $(`${slug} .form-prod .main_price`).val(price1)
    $(`${slug} .form-prod .main_volume`).val(volume)
    

  })
  $(".btn_volume_2").click(function() {
    slug ='.' + $(this).find('.slug').val()
    volume = $(this).find('.btn_volume2').val()
    price2 = $(this).find('.btn_prise2').val()
    console.log(slug)
    $(this).attr('disabled', true)
    $(`${slug} .btn_volume_1`).attr('disabled', false)
    $(`${slug} .btn_prise .price`).html(`${price2} грн.`)
    $(`${slug} .form-prod .main_price`).val(price2)
    $(`${slug} .form-prod .main_volume`).val(volume)
    
  })

})


$(document).ready(function() {
  $("#menuCheck").click(function() {

    $(".newLayer").addClass('show')
  })
})

$(document).ready(function() {
  $(".close").click(function() {

    $(".newLayer").removeClass('show')
  })
})

$(document).ready(function() {
  $(".black").click(function() {

    $(".newLayer").removeClass('show')
  })
})

$(document).ready(function() {
  $(".block0").hover(function() {
    $(this).addClass('style')
    $("button", this).css({'opacity': '1'})
    
  },function(){
    $(this).removeClass('style')
    $("button", this).css({'opacity': '0'})
  })
})







///Смена логотипа в шапке////

function logoFn( jQuery ){
  if ($(window).width() <= '576'){
    $('.logo img').attr('src', '/static/content/img/logo.svg')
} else {
    $('.logo img').attr('src', '/static/content/img/logo_big.svg')
}
}
$(document).ready(function() {
  logoFn()
  $(window).resize(function() {
    logoFn()

 });
})


//Замена урла главной картинки на shop_detail
$(document).ready(function() {
  $(".gal_img").click(function() {
  src = $(this).find('img').attr('src')  

    $(".main_img img").attr('src', src)
  })
})










AOS.init();
// You can also pass an optional settings object
// below listed default settings
AOS.init({
  // Global settings:
  disable: false, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function
  startEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on
  initClassName: 'aos-init', // class applied after initialization
  animatedClassName: 'aos-animate', // class applied on animation
  useClassNames: false, // if true, will add content of `data-aos` as classes on scroll
  disableMutationObserver: false, // disables automatic mutations' detections (advanced)
  debounceDelay: 50, // the delay on debounce used while resizing window (advanced)
  throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)


  // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:
  offset: 220, // offset (in px) from the original trigger point
  delay: 0, // values from 0 to 3000, with step 50ms
  duration: 1200, // values from 0 to 3000, with step 50ms
  easing: 'ease', // default easing for AOS animations
  once: true, // whether animation should happen only once - while scrolling down
  mirror: false, // whether elements should animate out while scrolling past them
  anchorPlacement: 'top-bottom', // defines which position of the element regarding to window should trigger the animation

});



$('.responsive').slick({
  dots: true,
  infinite: true,
  speed: 300,
  slidesToShow: 1,
  centerMode: true,
  variableWidth: true,
  autoplay: true,
  autoplaySpeed: 2000,
});


